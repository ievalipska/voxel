[
  {
    "name": "Camera.java",
    "path": "src/com/ch/Camera.java",
    "content": {
      "structured": {
        "description": "A `Camera` class that handles view and projection matrices for a 3D camera. The class has an abstract `calculateProjectionMatrix` method that returns a matrix for a specific camera type, and an `adjustToViewport` method that resizes the camera based on its dimensions. The class also contains a `getTranslationMatrix` method that returns a matrix representing the camera's position in 3D space. Finally, the code defines a `CameraStruct` class that serves as a base class for other camera types and provides an abstract `getAsMatrix4` method for returning the camera's transformation matrix in a standard format.",
        "diagram": {
          "path": "src/com/ch/Camera.java",
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    subgraph cluster_main {\n        // style=filled\n        color=\"#00000000\"\n        Camera [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n        label = \"\"\n    }\n    Vector3f []\n    World []\n    CameraStruct []\n    Transform []\n    Matrix4f []\n    Camera -> World [penwidth=1]\n    Camera -> Vector3f [style=\"dashed\"]\n    World -> Camera [style=\"dashed\"]\n    Camera -> Matrix4f [style=\"dashed\"]\n    Camera -> Matrix4f [penwidth=5]\n    Camera -> Transform [penwidth=1]\n    CameraStruct -> Camera [penwidth=1]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 973 800\"><svg id=\"d2-svg\" class=\"d2-558717529\" width=\"973\" height=\"800\" viewBox=\"11 11 973 800\"><rect x=\"11.000000\" y=\"11.000000\" width=\"973.000000\" height=\"800.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-558717529 .text {\n\tfont-family: \"d2-558717529-font-regular\";\n}\n@font-face {\n\tfont-family: d2-558717529-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-558717529 .text-italic {\n\tfont-family: \"d2-558717529-font-italic\";\n}\n@font-face {\n\tfont-family: d2-558717529-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,d09GRgABAAAAAA2EAAoAAAAAFRgAARhRAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAAA9AAAAGAAAABgW1SVeGNtYXAAAAFUAAAAjwAAALIC8gPVZ2x5ZgAAAeQAAAcpAAAJ2P40lCpoZWFkAAAJEAAAADYAAAA2G7Ur2mhoZWEAAAlIAAAAJAAAACQLeAjBaG10eAAACWwAAAB0AAAAdDSmBCxsb2NhAAAJ4AAAADwAAAA8JUIn1m1heHAAAAocAAAAIAAAACAANQD2bmFtZQAACjwAAAMmAAAIMgntVzNwb3N0AAANZAAAACAAAAAg/8YAMgADAeEBkAAFAAACigJY//EASwKKAlgARAFeADIBIwAAAgsFAwMEAwkCBCAAAHcAAAADAAAAAAAAAABBREJPAAEAIP//Au7/BgAAA9gBESAAAZMAAAAAAeYClAAAACAAA3icbMw/TsIAHEDhr7Zq1ar1f/UaegNnJ43MDQmBhIEwEI4DBLrCwspxuMaP0Jm3fslDIpWgkGlQKaVyX779+NNR6xkYmZhG4LOVX/9qXX1D46PEPnaxjU2so4lVLGMR85i179O9+5A4k8qcu3Apd+XajcKtO/dKDx49efbi1ZuKAwAAAP//AQAA//8WdiC1AHicfFVvbBt3GX5/v7v48sf5Y9/5LnZsX+yz72zn7Dh39l0cx3YcJ3ES282/Zi1Lna7tOjVrxqJVE0WjDDppqiatZFOliWkCJAbatC+oFR8QsAkBUgD1C6rQgE9II4MVCbDCv4mc0dmumwZpX0735fe+z/O8z/O+0AEBAPx5fAsI6IJ+sIMDQKV9BKHqusARqiQJFKVLNE0FrqO962+Shcf/GPrWf2SeLH713dJfnngP3zrcRl+pvviisXHj4sVT9+8bEfSb+wAACFL1AxzFbwEP0OEXxWQii1WF5ShRFPx92MGwrKpoOmexIH/pkhZ//Fp5fGVQozVx4ux0wL+YDhWGhUDVWrh6onLrC0U9Eh6WMk9enUxXk8NDCh9t9BAA8I/wLjhN3CrNqTqtEgKtabpAEQIhCRYLRQgvVVMsOffT6kulcpfLSi79RM6wpKWvcxHvGt+4cQOdP9xBz8lPj7xuvI3OvC5vycZNQGCtHyADvwURAM4vSnoDbzIhSpJJRtPaZCwWB8NyHMs6GIvl48JOKOVZ1ydXosFyJJ08k04/wavOuVgw6RkLlEcT6aesExMjI8rMeEBhY64FXVlVEqGYN8zHh8RRNuou6hMbCUBQBcBJvAuUyU3QfZRAfPf593vRr3o/eB5XCoXDO02dVwFwHu9CL4BKqDTLcqqm6bSKXk0vDXV0EqQz6fr+SeNdvGvcSj6jJZ9NoO3DnebbswCEjHfB19CPsFio5luaZRytKgKR0PSGjme7lrsJgiS5OPt2sQuRzAhzs2LULlAYkX0+2x28a7yR2E4mtxNoy3gjcVnTLifQ1uEOei2wJEllyXgWADBI9QP0b1QDxpwe528bQ9VVQjA7SYqm622X3Jkqy4ubqpSxkXT2XK6TFE7bxaWA7FDcgUKSH7NurM998Ywa8mUM13xwdCo2+lvRH1moKrlMk2OwfoBuoxq4H+n2cHItF3649KRcOZeUJ9koLXrij2mpiWGN9bsq1qeqM1fWR/3OOOeY2SlMz7lsChOEB1ywhPfAYSbpES6fTWbCTgyIld0WmxPB42yk4bPvH44fp4MbXD5ANXBB8Gg/03mUz9JOFKFqplNNhh89thUtnYnrea+1w/hZ13Ah4klxXs/K1+uYsIeF5Kb16XOzO6tybFlxq3255aDTpjp4FOwZ7HWP8euAYAQAvYrvAdfwYQ4fdT5FqZRAjKznevID/Scyroh9qHvI5gt32s5bL6yjd1IdK4trvT061a2MrGWN0+Y8eAD0Id5rZZYyHacqrIOhGsFNJsyyBH+zEh8gw6tyNtmZLU+S5Lx7PjaL9+5nhNH8OB8wfolkZrC3FIkZ79TrZk34FN/GIgwBgAXc883Zy/UD+BTvgd1UK5nQGx53MC2ZnslbXqhcQ8hGWCjUzVpzNie+fPga1UXYEU6TZLMGD4A/QTVzD5h4m3C5FmjLI6iPEjiXo0hxTZwY6xg9HcxoJJmtZEiy6JiXZ00+c+z8yCzaXwiM6SFZzY/bvMxRTg//oK0ZqsHgUQzHJTM7hldjjyjW6HBcsLZ30e9RDfrBc9RLDqYPS0rDP62A3FvalBc3laWzcmkzEl1RNcX8WC9tzF5ZjzW/U9M7M9PFws7M9JxZu/7Puor+hmrNXFBHEPdhwS+aV4VWsrjZgqJYtvuVnIUIrsca8VDESRrb+e8ECklvPOxfEWKMehffmeKjrXDwl76JUGShqmYzEfFPQV97TuhLqAYDRzTiKPGBNj2kpxx1OoYGXIEyn0H7VTnTNdOZSxt3AdX/Wz9A11ANpOO7/viqNzd9c9F/e6zqjHNTYiQTHo+l5AU5tuiO0apPHNOGs4n4qjUREvlQTHBJvCsbHskHA94Q44ryXtHun5SjM0ET82T9AJ3G2+3dpOlmwtRGqo7sph9MJUiUKvaUA/mhF6zXUoTb3+fqsQ2MWnPRflcvsqc6Xn45a3xit3u93R061W/WHq8foL+ifTNnD2o/dD/dWk/vtZ057ynKs2VzwYZOWqd1G08jzbhHO03LoNOGa1FQmzqnAdAf0P7/35vrxXKAtJCkLUB/rWIcon3jY6EkBBYCyGm4Gm/r9wDQr5uYBFpSudZjXaU4QRLFxr2m5N9tnIh09lFk/3D/+trehSW509ZNDvjpTYQ/2mYlBxN2bP/j78+xMZaVuStm3X/VD9Av8CsQOjY/QW87mZIeJNbRHOAP8xe9Krc4NnPq5EXr0oakqJ6CR1qrLp8qLSbTmS1rPhryJ0opdXoinPFGNDen5panM2ccpG1eyXxuzMyQKfRd/GXoBgbAJ+g+HamESglBVdeaVxOV5gXjz11o8+TymnXNqP9ctNgpkgkx30ugN42dbPbHnrzPnRhsexjuon0gmveYP1c5j/Yb4iEo4hLcxrehB4BuzLNJ5yrtFTjGI+ASxzp9g6xz+H8AAAD//wEAAP//cpv8ewAAAAABAAAAARhR1qZqS18PPPUAAQPoAAAAANhdoMwAAAAA3WYvN/69/t0IHQPJAAIAAwACAAAAAAAAAAEAAAPY/u8AAAhA/r39vAgdA+gAwv/RAAAAAAAAAAAAAAAdAnQAJAImADkCwQAjAfoADAH+AF0B8ABSAvQAXwIZACcBswAlAhcAJwHhACUBGgArAgsAHwDtAB8A+AAsAx8AHwINAB8CAwAnAhf/9gFWAB8Bkv/8AUUAPAIQADgBwAA7Aa3/1AHg//cB4AAPAO0AHwAAAEcAAAAuAGAAjgDOAOIBAAE6AXIBoAHYAhICOgJkAnACkgLUAv4DLANmA4QDwAPuBBoEOARkBKAEyATWBOwAAQAAAB0AjAAMAGYABwABAAAAAAAAAAAAAAAAAAQAA3icnJTbThtXFIY/B9tterqoUERu0L5MpWRMoxAl4cqUoIyKcOpxepCqSoM9PojxzMgzmJIn6HXfom+Rqz5Gn6LqdbV/L4MdRUEgBPx79jr8a61/bWCT/9igVr8L/N2cG66x3fzZ8B2+aB4Z3mC/+ZnhOg8b/xhuMGi8NdzkQaNr+BPe1f80/ClP6r8ZvstW/dDw5zyubxr+csPxr+GveMK7Ba7BM/4wXGOLwvAdNvnV8Ab3sJi1OvfYMdzga7YNN9kGekyoSJmQMcIxZMKIM2YklEQkzJgwJGGAI6RNSqWvGbGQY/TBrzERFTNiRRxT4UiJSIkpGVvEt/LKea2MQ51mdtemYkzMiTxOiclw5IzIyUg4VZyKioIXtGhR0hffgoqSgJIJKQE5M0a06HDIET3GTChxHCqSZxaRM6TinFj5nVn4zvRJyCiN1RkZA/F04pfIO+QIR4dCtquRj9YiPMTxo7w9t1y23xLo160wW8+7ZBMzVz9TdSXVzbkmONatz9vmB+GKF7hb9WedyfU9Guh/pcgnnGn+A00qE5MM57ZoE0lBkbuPY1/nkEgd+YmQHq/o8Iaezm26dGlzTI+Ql/Lt0MXxHR2OOZBHKLy4O5RijvkFx/eEsvGxE+vPYmIJv1OYuktxnKmOKYV67pkHqjVRhTefsN+hfE0dpXz62iNv6TS/THsWMzJVFGI4VS+X2iitfwNTxFS1+Nle3fttmNvuLbf4glw77NW64OQnt2B03VSD9zRzrp+AmAE5J7LokzOlRcWFeL8m5owUx4G690pbUtG+9PF5LqSShKkYhGSKM6PQ39h0Exn3/prunb0lA/l7pqeXVd0mi1Ovrmb0Rt1b3kXW5WRlAi2bar6ipr64Zqb9RDu1yj+Sb6nXLecRoeIudvtDr8AOz9llj7Gy9HUzv7zzr4S32FMHTklkNZSmfQ2PCdgl4Cm77PKcp+/1csnGGR+3xmc1f5sD9umwd201C9sO+7xci/bxzH+J7Y7qcTy6PD279TQf3EC132jfrt7NribnpzG3aFfbcUzM1HNxW6s1ufsE/wMAAP//AQAA//9yoVFAAAAAAwAA//UAAP/OADIAAAAAAAAAAAAAAAAAAAAAAAAAAA==\");\n}\n.d2-558717529 .text-mono {\n\tfont-family: \"d2-558717529-font-mono\";\n}\n@font-face {\n\tfont-family: d2-558717529-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-558717529 .text-mono-bold {\n\tfont-family: \"d2-558717529-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-558717529-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,d09GRgABAAAAAA+AAAwAAAAAGngAAQScAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABHAAAAGAAAABgmKbWhWNtYXAAAAF8AAAAjwAAALIC8gPVZ2FzcAAAAgwAAAAIAAAACAAAABBnbHlmAAACFAAABzkAAAmQg8vgBmhlYWQAAAlQAAAANgAAADYbI9ohaGhlYQAACYgAAAAkAAAAJAYzALFobXR4AAAJrAAAAF4AAAB0Q/gGnGxvY2EAAAoMAAAAPAAAADwkYibUbWF4cAAACkgAAAAgAAAAIABRAmpuYW1lAAAKaAAABO8AAA2sAwZtKnBvc3QAAA9YAAAAIAAAACD/uAAzcHJlcAAAD3gAAAAHAAAAB2gGjIUABAJYArwABQAAAooCWAAAAEsCigJYAAABXgAyAR4AAAILAwkDBAMCAgQgAAL3AgA4AwAAAAAAAAAAQURCTwCgACD//wPY/u8AAAQkAcZgAAGfAAAAAAHeApQAAAAgAAN4nGzMP07CABxA4a+2atWq9X/1GnoDZyeNzA0JgYSBMBCOAwS6wsLKcbjGj9CZt37JQyKVoJBpUCmlcl++/fjTUesZGJmYRuCzlV//al19Q+OjxD52sY1NrKOJVSxjEfOYte/TvfuQOJPKnLtwKXfl2o3CrTv3Sg8ePXn24tWbigMAAAD//wEAAP//FnYgtQAAAQAB//8AD3icdFVdbNvWFT73ihFtiZFFSyQlUaIkUhT1S9miSdpWJf/Ece3EdizHruO4dtI0BrLUxrLI2dw1HrB1Q4PV3TAk2NJsDbChARYgyH6ABeu6PHUDljwMQ7G97GU/GFAgD4OHem+2NFBUnLhDXy75cu/5vu985ztwCCQArOMb4IB2oKATGIAaHadlTVEkkjQVTjNNKYppCXfW77yfShHpq2fO3CGy0ZvRK8v4xt7q4uS5c4c/+M2lM6XS3Q9QDQCB0djB/fgmCABHRRXrPYahFVmOTCYl0elk/CyrFQ2TczrR+fLabNfJd+Yr5+NVzkyoY5nM8e5Ef6CaWqUyc5szq+9WtdgiG9SWh46cKcZCC4VuQNAPgAW8BRELq8ZZEDVa0nsq2JRIUlIUSXAwTP+tQZZgB29dJZwkdhSLY1rBgUkngbc+OX36k731x3z11HTo/nvv3Q9Nn6ryjwEs7MXGDlbwTchb2JOK2cSq9ySTivJZJhYRjhMw43c6UWb46/qcvFAo5ANqdDYxqJRfe7F0OXdcHOlKqOGu6IlcRSx9iepSV4RkLMjxzOGEp3C0y5jXc5mlIC9EfCE/JXoLI6rxci8giALgPrwFpMVR0uOMRP/zIxz6CHuvXt3btrF2AOBxvAWHAWoOzceynGYYpk9z/Pn3P5rq4DyEl/NMfv93eKv+J2PFMFYM1LW3DggIADyLt0C27/lZltEq2DQ1TsCc9efTHJKSTCqS00mSi/Pv+jEiCDd1KLecdroogkAIoc7vTt9OOl3Y4WhzJvFW/U5Y1wVBN/gHD/geUxDMHh4t7q0/jg5GIoPRxwAYyo0dzKFdECADMC8mk3qPYarYMgWpVLBWZFmGlqyqStEwdQ+2FP57cTz1g587Ankx0KWFe8Tj1czoeWPDTcincbw/NF6N0VEqNZI5ecrFxWg34znrF+juVyfq/+oNpy7z/hmCFdkO1gUIjjR2sIR2Ld8ctat/ni/npzbHp9+cKJ2NjkT0cGY4IQ2klSG+lFujyldmZq6UZWHR7xMHs9lBMexbkhNg8Ss0drAXPwQ/iM0KTwtoiq7ZvHSL1345BMu18jk9/UKAIK9vuB38eDDr86dZXuWL1NuvV9cHwsHJu3tHND6xwQQfdXYI5cL4Ubv3ZotL4gAXlvE7ybgeJ3v+j9Kxyc3xY18enrygH8L1a4jhtO6EISRGusRyvDt7weJVvVIZeG3EL7e/Gn6hHBsuakOxTnqBt6wIM02vPQKvnRAHB4FGuhln/lJ4ZSo7EQ0HtEhBrT+5hvrQXt+SQbtW212ZfB2jzTVnMx/GAHAYP7Rf0hhSaz7G0BLdhE3SY9fbHOFq7+zk9XhKyIfww3tnIvnV5fofUbSo8sH6rwCg0YApAPQh/tSZBB4AnBDO29pojR0cxb8F2u6CNT60f1+It5fO/hCpRaFT5mLJAerSMnqrVgdVamtbpTqa961MrKBdq4tWvtjwuGcgmxj3wUpfdBGeYjamtnn0rN6/xXsYV83j8fhdaLssZNMpsfDSsfr7aCbPBeu/QDMca333dUC74H++zvMybLiJ2Mne2SlbBrQ9HFMPqmB7Lo12ocNKjM84wRqjZnY99QLKDa2Pja0P2aeY57i82DxbrrbPr9i+tk+rxlhjrFmDsdw2v4+0WUISk4rEMb5nlUiGZcc23I7oZKqy0FU+1xsfCBHkXDgX8iuxQJ5j8r/GPy3yUuXyxNzGQDhU/R5KCENaviQwwUe0FxCsA+AE2oXOA/rbXiPp9Q3KIX+hFE+zAieH1YUY2l4tl1yuN0jSOFKvAwK9sdPUNXMww1WsNOU5OPNPAzw1/I3CQH7FSCfdfEFeOfXVi0fWlGF5Ns0J3p6BiZfi5hqVj74cEYK0u+Mw1cZO9I3OZYOnuEC7z+33eehcXzo/ln26Q5L4GgRbHdEl3TQ1RmOk5wfymyeWMlff9L3+8cesmoh0saH4Cco8N/SzNefNm7X7ssq42i66aOu9SmMHH0bblk/mLT9rLTfTrVT529zE9Wg6nAte33AT8WlqdRkV6/8oqoE4Gq17X5TVp/sEbbd2BdfaFabm+OuHN6Yo1k24GWrqnQdo+4k8kUpNyE/q3uYsyAC4iLYtLjWf8txFknu2IuR7P76tUWGKaOfac7d+cu92nyfiIdwBdzfC/55msgyT8083/jPD5Bgmy85Y72YaO9iH3wLV1qjVJNtDuv1jdVt5FmtMq1GcsTAaGIlNZ0UjKp48PnBMLObkofixwmr56MXSYF9qSB69THEpfimcoMVAOM1eYJNBMRHhTyez6cne7lGWcKcr6dLJbGvWVfwGeAFeoXsMs8knzsR1pNFojkCEV/aeRZt7/0Xtv0Q14YQQMsLfvrSCvrb3raY+VgbdRdtwyLpvBQ1i/4AW0Watpd9jXEHfwZ+CG2BIbLmP8TtRLtPbm8maJq50p9Kalk51A8D/AAAA//8BAAD//3LY3t0AAAAAAQAAAAEEnKVquZxfDzz1AAMD6AAAAADcHHOkAAAAAN2XHqD/TP46AwwEJAABAAYAAgAAAAAAAAABAAAD2P7vAAACWP9M/0wDDAABAAAAAAAAAAAAAAAAAAAAHXicLIwhqkIBFAWH4fe/BINYLIKigqDF8pLBNAtxla5KHtx0wpkZY2tcjJtxNDbGv/Fn3I2ncTCuxttYjJdxGneZf92PcZ7OY1o7Yz/s6n1/AAAA//8BAAD//6NVEM8AAAAAACoAWgCIAMwA3gD6ATYBdgGmAdwCFAI6Al4CagKKAr4C4AMSA0oDagOqA9ID9AQQBDwEgASgBLAEyAABAAAAHQH4ACoAbgAGAAEAAAAAAAAAAAAAAAAAAwADeJyclk1vG9UXxn9jp7bHTfvPP5TSFCiXEkoaJRM7SqMqRQK3aVVDSEqcUqFSCcd2nFH8JnvcNqxZsGTFZwDEqqsuEGKVBQuWiBUrxIoPgFggNGeOPWPXJG1VqXnu3PP6POfea+Cd2N/EscZs4AAUW5zjQHGMFL8rjrPCn4rHmLEuKD5G2VpXnGDaeqQ4yY/WL4pTLMW+UmyzFPtJ8XEWY/8oPhE38YzikywlbimeYjrxeYAtSCe+VmwxntBcVoyJxA+K40wkflY8xtnEb4qPMZ74S3GCyeSY4iSTydOKU0wmZxTbTCZXFKeZTq4pPo5JthSPM5f8UvEJMsnvFZ/ESSpX1v9YTJ1VPMHlVC/O/7mQ6vU1ydupbxW/EKn5FOdTfyh+MdL76UjvL0VynYnkmuKknVJ8lnG71+PLEd9XOGWfV/wqaXtZ8bmI72uM2+8qNkzYvfpfD2fDOs+k/YniN0jbDcXTkThvRmp4iyX7oeKLzNrfKZ7FsXVmrDnm0j2N5iN5HTJpnRNrIVJDhpn0p4oXmU1/ofhapN9V4fAbDItkyJLBMK+rRVnlKNNkmwqGAvt08KhQp4MhT4MSTdq05P+i7JUxzLCLh0eLFRZY4IH8cyj2ozniWWeBi8xheICLxy6GTSp0qNDmvka7QZMGHoZ1itT9WswZCjTp0qZExUzhRNcYrtGkLOgWbZpcpUmNMlkc6fQyV8ixylU2uDLg2/MM/Ob7nofHN327j6T2Dq5UbQYy7tLEk84b3O/vOWTJsswV6hTZoyJWO1R4KBkWcbiEwzKXWJZYz16vK4oVMXiiVFlULNJmD0OTnefW2pUufe18v9s0RMlgr4CnlkH2BmUWxN9Ij7vClZHIXdG4jSvWznNVc4siXWoYVnEw3NSo/oRtCa/+365Mnl93hcYzTKrHPi0qbLGrfIaTWRAOPR4IpyHjNVxRoCEz7XPSFRaCvnusFcizhmFD4jcGIq8NRPA7GTVhWek3rGwwb6j/fYq41CiyTU12wpNXlLw5PhTssYIZYqdDSRRq4YlGHYnliAZVFtjgBmtDlRzNUVn+Btpv0+1PT9CdPzX+ec9REOULZkpOW05YKwgjd8izxU02uM2WrHNsskmOdbbIc118N9iUk7vBOqvikRcc7N2QE7DOxxjeJy82fuyK8hMo5p/JllTfkdqDWXap0xLO/cod6bUiHT67woYdjdrz7YhPCZcdsTSiX4MqXYpUdSpaUmFduOzNRnjqgomoSy++tuF+labctG05uX5Uw77eHf60BjUFN4T3FKo6zzUz/32jbcrp87sIUV66CGa802e/It0Orqv6lrhynwb3leGC8FGQ18TFWO9Rkuy+r8+FiT964svjJ74ciMpttnGDKY0fcI19yVbT6gzbwop4cDf2K/foiH4dUdev6DOJ4t9Nd8lwT++ZJlW52VrCeUnO4r6sgvm5y/whtkW9L9ui157Yz47IXZbXoibaGemtqtGnuSccezobwR1raNCVN7gtu8Epld7IHlrPcKSO9jCndQ2qOCevwrAmw9qOsnosX4eUGcsOqD3K70B+eVTl/fDZuCMnvyrTfJ2H+m6u9b+F6APh0hVeCvJG+fdY8AqHnr13+arEL7E3cubDGZ8fmfUon6e3HOz2KOvBHg+3HebgKPtRv1hG2ylz/wIAAP//AQAA///7vB6iAAADAAAAAAAA/7UAMgAAAAEAAAAAAAAAAAAAAAAAAAAAuAH/hbAEjQA=\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-558717529 .fill-N1{fill:#ECEDED;}\n\t\t.d2-558717529 .fill-N2{fill:#676C7E;}\n\t\t.d2-558717529 .fill-N3{fill:#9499AB;}\n\t\t.d2-558717529 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-558717529 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-558717529 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-558717529 .fill-N7{fill:#151719;}\n\t\t.d2-558717529 .fill-B1{fill:#717D86;}\n\t\t.d2-558717529 .fill-B2{fill:#717D86;}\n\t\t.d2-558717529 .fill-B3{fill:#ffff00;}\n\t\t.d2-558717529 .fill-B4{fill:#151719;}\n\t\t.d2-558717529 .fill-B5{fill:#151719;}\n\t\t.d2-558717529 .fill-B6{fill:#151719;}\n\t\t.d2-558717529 .fill-AA2{fill:#676C7E;}\n\t\t.d2-558717529 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-558717529 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-558717529 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-558717529 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-558717529 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-558717529 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-558717529 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-558717529 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-558717529 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-558717529 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-558717529 .stroke-N7{stroke:#151719;}\n\t\t.d2-558717529 .stroke-B1{stroke:#717D86;}\n\t\t.d2-558717529 .stroke-B2{stroke:#717D86;}\n\t\t.d2-558717529 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-558717529 .stroke-B4{stroke:#151719;}\n\t\t.d2-558717529 .stroke-B5{stroke:#151719;}\n\t\t.d2-558717529 .stroke-B6{stroke:#151719;}\n\t\t.d2-558717529 .stroke-AA2{stroke:#676C7E;}\n\t\t.d2-558717529 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-558717529 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-558717529 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-558717529 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-558717529 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-558717529 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-558717529 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-558717529 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-558717529 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-558717529 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-558717529 .background-color-N7{background-color:#151719;}\n\t\t.d2-558717529 .background-color-B1{background-color:#717D86;}\n\t\t.d2-558717529 .background-color-B2{background-color:#717D86;}\n\t\t.d2-558717529 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-558717529 .background-color-B4{background-color:#151719;}\n\t\t.d2-558717529 .background-color-B5{background-color:#151719;}\n\t\t.d2-558717529 .background-color-B6{background-color:#151719;}\n\t\t.d2-558717529 .background-color-AA2{background-color:#676C7E;}\n\t\t.d2-558717529 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-558717529 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-558717529 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-558717529 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-558717529 .color-N1{color:#ECEDED;}\n\t\t.d2-558717529 .color-N2{color:#676C7E;}\n\t\t.d2-558717529 .color-N3{color:#9499AB;}\n\t\t.d2-558717529 .color-N4{color:#CFD2DD;}\n\t\t.d2-558717529 .color-N5{color:#DEE1EB;}\n\t\t.d2-558717529 .color-N6{color:#EEF1F8;}\n\t\t.d2-558717529 .color-N7{color:#151719;}\n\t\t.d2-558717529 .color-B1{color:#717D86;}\n\t\t.d2-558717529 .color-B2{color:#717D86;}\n\t\t.d2-558717529 .color-B3{color:#ffff00;}\n\t\t.d2-558717529 .color-B4{color:#151719;}\n\t\t.d2-558717529 .color-B5{color:#151719;}\n\t\t.d2-558717529 .color-B6{color:#151719;}\n\t\t.d2-558717529 .color-AA2{color:#676C7E;}\n\t\t.d2-558717529 .color-AA4{color:#CFD2DD;}\n\t\t.d2-558717529 .color-AA5{color:#DEE1EB;}\n\t\t.d2-558717529 .color-AB4{color:#CFD2DD;}\n\t\t.d2-558717529 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"com\"><g class=\"shape\" ><rect x=\"12.000000\" y=\"12.000000\" width=\"971.000000\" height=\"798.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"497.500000\" y=\"45.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">com</text></g><g id=\"com.ch\"><g class=\"shape\" ><rect x=\"62.000000\" y=\"62.000000\" width=\"871.000000\" height=\"698.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"497.500000\" y=\"91.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">ch</text></g><g id=\"com.ch.Camera\"><g class=\"shape\" ><rect x=\"380.000000\" y=\"248.000000\" width=\"200.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"480.000000\" y=\"286.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">Camera</text></g><g id=\"com.ch.math\"><g class=\"shape\" ><rect x=\"112.000000\" y=\"499.000000\" width=\"366.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"295.000000\" y=\"524.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">math</text></g><g id=\"com.ch.voxel\"><g class=\"shape\" ><rect x=\"498.000000\" y=\"499.000000\" width=\"193.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"594.500000\" y=\"524.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">voxel</text></g><g id=\"com.ch.Transform\"><g class=\"shape\" ><rect x=\"711.000000\" y=\"499.000000\" width=\"132.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"777.000000\" y=\"537.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Transform</text></g><g id=\"com.ch.CameraStruct\"><g class=\"shape\" ><rect x=\"400.000000\" y=\"112.000000\" width=\"160.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"480.000000\" y=\"150.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">CameraStruct</text></g><g id=\"com.ch.math.Matrix4f\"><g class=\"shape\" ><rect x=\"162.000000\" y=\"549.000000\" width=\"123.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"223.500000\" y=\"587.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Matrix4f</text></g><g id=\"com.ch.math.Vector3f\"><g class=\"shape\" ><rect x=\"305.000000\" y=\"549.000000\" width=\"123.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"366.500000\" y=\"587.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Vector3f</text></g><g id=\"com.ch.voxel.World\"><g class=\"shape\" ><rect x=\"548.000000\" y=\"549.000000\" width=\"93.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"594.500000\" y=\"587.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">World</text></g><g id=\"com.ch.(Camera -&gt; math.Matrix4f)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 409.071014 315.000000 L 409.071014 344.000000 S 409.071014 354.000000 399.071014 354.000000 L 213.000000 354.000000 S 203.000000 354.000000 203.000000 364.000000 L 203.000000 546.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-558717529)\" /><text x=\"237.000000\" y=\"539.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.ch.(Camera -&gt; math.Vector3f)[0]\"><path d=\"M 466.213989 315.000000 L 466.213989 444.000000 S 466.213989 454.000000 456.213989 454.000000 L 376.500000 454.000000 S 366.500000 454.000000 366.500000 464.000000 L 366.500000 546.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-558717529)\" /><text x=\"401.000000\" y=\"539.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.ch.(voxel.World -&gt; Camera)[0]\"><path d=\"M 594.500000 616.000000 L 594.500000 700.000000 S 594.500000 710.000000 604.500000 710.000000 L 873.000000 710.000000 S 883.000000 710.000000 883.000000 700.000000 L 883.000000 364.000000 S 883.000000 354.000000 873.000000 354.000000 L 561.927979 354.000000 S 551.927979 354.000000 551.927979 344.000000 L 551.927979 317.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-558717529)\" /><text x=\"518.000000\" y=\"335.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.ch.(Camera -&gt; math.Matrix4f)[1]\"><path d=\"M 437.641998 315.000000 L 437.641998 394.000000 S 437.641998 404.000000 427.641998 404.000000 L 254.000000 404.000000 S 244.000000 404.000000 244.000000 414.000000 L 244.000000 546.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-558717529)\" /></g><g id=\"com.ch.(Camera -&gt; Transform)[0]\"><path d=\"M 523.356995 315.000000 L 523.356995 394.000000 S 523.356995 404.000000 533.356995 404.000000 L 767.000000 404.000000 S 777.000000 404.000000 777.000000 414.000000 L 777.000000 496.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-558717529)\" /></g><g id=\"com.ch.(Camera -&gt; voxel.World)[0]\"><path d=\"M 494.785004 315.000000 L 494.785004 444.000000 S 494.785004 454.000000 504.785004 454.000000 L 584.500000 454.000000 S 594.500000 454.000000 594.500000 464.000000 L 594.500000 546.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-558717529)\" /></g><g id=\"com.ch.(CameraStruct -&gt; Camera)[0]\"><path d=\"M 480.500000 179.000000 L 480.500000 245.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-558717529)\" /></g><mask id=\"d2-558717529\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"973\" height=\"800\">\n<rect x=\"11\" y=\"11\" width=\"973\" height=\"800\" fill=\"white\"></rect>\n<rect x=\"473.000000\" y=\"17.000000\" width=\"49\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"486.500000\" y=\"67.000000\" width=\"22\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"451.500000\" y=\"270.500000\" width=\"57\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"273.500000\" y=\"504.000000\" width=\"43\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"572.000000\" y=\"504.000000\" width=\"45\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"733.500000\" y=\"521.500000\" width=\"87\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"422.500000\" y=\"134.500000\" width=\"115\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"184.500000\" y=\"571.500000\" width=\"78\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"327.500000\" y=\"571.500000\" width=\"78\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"570.500000\" y=\"571.500000\" width=\"48\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n"
        },
        "items": [
          {
            "id": "27dac1a2-ee16-75a9-ad4e-8a931b7bed81",
            "ancestors": [],
            "type": "function",
            "description": "Is an abstract class with various methods and fields used for camera manipulation. The class has a Matrix4f representation of the camera's projection and view projection matrices, as well as a Transform structure for storing camera position and rotation information. Additionally, there are methods for calculating the view matrix and translation matrix, and an abstract method for calculating the projection matrix based on a CameraStruct data object.",
            "name": "Camera",
            "location": {
              "start": 6,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 50,
            "docLength": null
          },
          {
            "id": "d0db7da3-8e10-0a90-c644-109427996a94",
            "ancestors": [
              "27dac1a2-ee16-75a9-ad4e-8a931b7bed81"
            ],
            "type": "function",
            "description": "Computes and returns a matrix representing the view projection transformation, based on the current view matrix and any changes to the transform property.",
            "params": [],
            "returns": {
              "type_name": "Matrix4f",
              "description": "a `Matrix4f` object representing the view projection matrix.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "Camera camera = new Camera(Matrix4f.createOrthographic(10, 20, -1, 1));\nTransform transform = new Transform();\ntransform.setPosition(new Vector3f(5, 10, -1));\ncamera.getViewProjection(); // This will return the view projection matrix with the camera position (5, 10, -1) and an orthographic projection with a width of 10, height of 20, and near plane at -1 and far plane at 1.",
              "description": ""
            },
            "name": "getViewProjection",
            "location": {
              "start": 18,
              "insert": 18,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 8,
            "docLength": null
          },
          {
            "id": "3ccd92e5-b57e-82bd-4946-4d094fa67bc1",
            "ancestors": [
              "27dac1a2-ee16-75a9-ad4e-8a931b7bed81"
            ],
            "type": "function",
            "description": "Computes the view matrix for a given camera transformation, including rotation and translation.",
            "params": [],
            "returns": {
              "type_name": "Matrix4f",
              "description": "a 4x4 matrix representing the view transformation of a camera.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "public class MyCamera extends Camera {\n    public MyCamera(Matrix4f projection) {\n        super(projection);\n    }\n    \n    @Override\n    public Matrix4f calculateProjectionMatrix(CameraStruct data) {\n        // Some code to calculate the projection matrix\n        return new Matrix4f();\n    }\n    \n    @Override\n    public void adjustToViewport(int width, int height) {\n        // Some code to adjust the camera's position to fit within a viewport\n    }\n}\n",
              "description": "\nIn this example, MyCamera is a subclass of Camera and overrides two methods from its superclass: calculateProjectionMatrix() and adjustToViewport(). The calculateProjectionMatrix() method returns a Matrix4f representing the projection matrix for the camera, while the adjustToViewport() method adjusts the position of the camera to fit within a viewport of width and height.\n\nInside MyCamera's constructor, the superclass's constructor is called with an instance of Matrix4f as an argument, which represents the projection matrix. This instance will be used by the calculateProjectionMatrix() method to return the projection matrix for the camera.\n\nWhen using this class, the programmer can create a MyCamera object and pass an instance of Matrix4f representing the desired projection matrix to its constructor. The created object can then use the calculateProjectionMatrix() method to get the projection matrix for the camera.\n\nThe programmer can also use the adjustToViewport() method to adjust the position of the camera to fit within a viewport of width and height."
            },
            "name": "calculateViewMatrix",
            "location": {
              "start": 27,
              "insert": 27,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 8,
            "docLength": null
          },
          {
            "id": "53a2772a-d67e-0dbe-d845-5bacbd3ad102",
            "ancestors": [
              "27dac1a2-ee16-75a9-ad4e-8a931b7bed81"
            ],
            "type": "function",
            "description": "Generates a 4x4 matrix representing a translation from the origin, based on a vector of coordinates representing the displacement.",
            "params": [],
            "returns": {
              "type_name": "Matrix4f",
              "description": "a 4x4 matrix representing the translation of the camera position from its previous location.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "Camera camera = new Camera(new Matrix4f());\nVector3f position = new Vector3f(1, 2, 3);\ncamera.getTransform().setPos(position);\nMatrix4f translationMatrix = camera.getTranslationMatrix();\n",
              "description": ""
            },
            "name": "getTranslationMatrix",
            "location": {
              "start": 36,
              "insert": 36,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 4,
            "docLength": null
          },
          {
            "id": "6259b8e7-4ed4-b789-cd4a-ace40f2351ee",
            "ancestors": [
              "27dac1a2-ee16-75a9-ad4e-8a931b7bed81"
            ],
            "type": "function",
            "description": "Retrieves the value of the `transform` instance variable and returns it.",
            "params": [],
            "returns": {
              "type_name": "Transform",
              "description": "a reference to an instance of the `Transform` class.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "Camera camera = new PerspectiveCamera(new Matrix4f().initPerspective(60, width / height, 0.1f, 100.0f));\ncamera.adjustToViewport(width, height);\ncamera.getTransform().setPosition(new Vector3f(0.0f, 0.0f, -5.0f));\n",
              "description": ""
            },
            "name": "getTransform",
            "location": {
              "start": 41,
              "insert": 41,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "method",
            "length": 3,
            "docLength": null
          },
          {
            "id": "aee7c01d-4808-a7b6-594d-c132b99c41fa",
            "ancestors": [
              "27dac1a2-ee16-75a9-ad4e-8a931b7bed81"
            ],
            "type": "function",
            "description": "Is an abstract class that acts as a base for other classes in the \"Camera\" package. It contains an abstract method called getAsMatrix4() and does not have any fields or methods of its own. The purpose of this class is to provide a common interface for subclasses of Camera to implement.",
            "name": "CameraStruct",
            "location": {
              "start": 49,
              "insert": 49,
              "offset": "\t",
              "indent": 1,
              "comment": null
            },
            "item_type": "class",
            "length": 5,
            "docLength": null
          }
        ]
      }
    }
  }
]